;inverted right-angled triangle

[org 0x0100]
jmp start

clrscr:
push ax
push es
push di

mov ax, 0xb800
mov es, ax
mov di, 0

nextloc:
mov word [es:di], 0x0720
add di, 2
cmp di, 4000
jne nextloc

pop di
pop ax
pop es
ret


print:
mov bp, sp
push es
push ax
push cx
push si
push di

mov ax, 0xb800
mov es, ax
mov al, 80
mul byte [bp + 8]
add ax, [bp + 6]
shl ax, 1
mov di, ax
mov cx, [bp + 4]
mov bx, di
sub bx, 2

loop1:
mov dx, cx
add bx, 2
mov di, bx

column_wise:
mov al, [bp + 2]
mov ah, 0x04
mov [es:di], ax
add di, 160
loop column_wise

dec dx
mov cx, dx
cmp cx, 0
jne loop1


popa
ret 8

start:
call clrscr

mov ax, 8  ;row
push ax
mov ax, 5    ;column
push ax
mov ax, 6    ;height
push ax
mov ax, '*'    ;* symbol
push ax

call print

mov ax, 0x4c00
int 0x21
